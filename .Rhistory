library(dplyr)
library(cowplot)
library(ggplot2)
library(forcats)
library(scales)
library(ReactomePA)
library(org.Hs.eg.db)
library(clusterProfiler)
library(ragg)
library(AnnotationDbi)
library(enrichplot)
library(tidyr)
library(Seurat)
library(ggtext)
#for Linux based systems
options(clusterProfiler.download.method = "wget")
#load cfRNA WGCNA results
load("./cfrna/results/wgcna_main/cfwgcna.RData")
setwd("/home/bioinf/Desktop/wgcna_manuscript/cfwgcna_hcc/")
#for Linux based systems
options(clusterProfiler.download.method = "wget")
#load cfRNA WGCNA results
load("./cfrna/results/wgcna_main/cfwgcna.RData")
#for Linux based systems
options(clusterProfiler.download.method = "wget")
#load cfRNA WGCNA results
load("/home/bioinf/Desktop/wgcna_manuscript/cfwgcna_hcc/cfrna/results/wgcna_main/cfwgcna.RData")
#get gene names and transfer to ENTREZID
module_genes<-data.frame( module = cfmergedcolors, gene = colnames(cfrna_wgcna_input))
module_genes_entrez<-AnnotationDbi::select(org.Hs.eg.db,
keys = module_genes$gene,
keytype = "SYMBOL",
columns = c("SYMBOL","ENTREZID")) %>% dplyr::left_join(module_genes,by=c("SYMBOL"="gene"))
#generate enrichment plots for module cf-purple
purple_genes<-module_genes_entrez %>% dplyr::filter(module=="cf-purple") %>%
na.omit() %>%
dplyr::select(ENTREZID) %>%
unique()
purple_reactome <- enrichPathway(gene= purple_genes$ENTREZID, pvalueCutoff = 0.05)
purple_reactome_df<-fortify(purple_reactome, showCategory = 10)
purple_reactome_df$p.adjust<- round(-log10(as.numeric(purple_reactome_df$p.adjust)), digits=1)
purple_reactome_plot_old<-enrichplot::cnetplot(purple_reactome,  color_category = "purple", color_gene = "purple", cex_label_category=1, cex_label_gene=1, showCategory = 5) + theme_void(base_size = 24) +   labs(title = "Reactome pathway enrichment analysis", subtitle ="<span style = 'color: red;'>cf-purple</span>") + theme(text=element_text(family="Arial"), plot.margin = unit(c(0, 0, 0, 0), "cm"), plot.subtitle =  element_markdown(size = 25, face="bold", hjust = 0.5), plot.title = element_text(color="black", size=26, face="bold", hjust = 0.5)) + guides(size = guide_legend(reverse=T))
purple_reactome_plot<-ggplot(purple_reactome_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks()) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
labs(title = "Reactome pathway enrichment analysis", subtitle ="<span style = 'color: red;'>cf-purple</span>") +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle =  element_markdown(size = 27, face="bold", hjust = 0.5))
#generate enrichment plots for module cf-yellow
yellow_genes<-module_genes_entrez %>%
dplyr::filter(module=="cf-yellow") %>%
na.omit() %>%
dplyr::select(ENTREZID) %>%
unique()
yellow_reactome <- enrichPathway(gene= yellow_genes$ENTREZID, pvalueCutoff = 0.05)
yellow_reactome_df<-fortify(yellow_reactome, showCategory = 10)
yellow_reactome_df$p.adjust<- round(-log10(as.numeric(yellow_reactome_df$p.adjust)), digits=1)
yellow_reactome_plot_old<-enrichplot::cnetplot(yellow_reactome,  color_category = "yellow", color_gene = "yellow", cex_label_category=1, cex_label_gene=1, showCategory = 5) + theme_void(base_size = 24) +
labs(title = "Reactome pathway enrichment analysis", subtitle ="<span style = 'color: red;'>cf-yellow</span>") + theme(text=element_text(family="Arial"), plot.margin = unit(c(0, 0, 0, 0), "cm"), plot.subtitle =  element_markdown(size = 25, face="bold", hjust = 0.5), plot.title = element_text(color="black", size=26, face="bold", hjust = 0.5)) + guides(size = guide_legend(reverse=T))
yellow_reactome_plot<-ggplot(yellow_reactome_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks()) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
labs(title = "Reactome pathway enrichment analysis", subtitle ="<span style = 'color: red;'>cf-yellow</span>") +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle =  element_markdown(size = 27, face="bold", hjust = 0.5))
yellow_reactome_plot
#load cell specific presevration staistics
load("/home/bioinf/Desktop/wgcna_manuscript/cfwgcna_hcc/cfrna/results/wgcna_main/scrna/results/cf_mp/Portal endothelial cells_statsZ.RData")
library(dplyr)
library(cowplot)
library(ggplot2)
library(forcats)
library(scales)
library(ReactomePA)
library(org.Hs.eg.db)
library(clusterProfiler)
library(ragg)
library(AnnotationDbi)
library(enrichplot)
library(tidyr)
library(Seurat)
library(ggtext)
#for Linux based systems
options(clusterProfiler.download.method = "wget")
#load cfRNA WGCNA results
load("./cfrna/results/wgcna_main/cfwgcna.RData")
#get gene names and transfer to ENTREZID
module_genes<-data.frame( module = cfmergedcolors, gene = colnames(cfrna_wgcna_input))
module_genes_entrez<-AnnotationDbi::select(org.Hs.eg.db,
keys = module_genes$gene,
keytype = "SYMBOL",
columns = c("SYMBOL","ENTREZID")) %>% dplyr::left_join(module_genes,by=c("SYMBOL"="gene"))
#generate enrichment plots for module cf-purple
purple_genes<-module_genes_entrez %>% dplyr::filter(module=="cf-purple") %>%
na.omit() %>%
dplyr::select(ENTREZID) %>%
unique()
purple_reactome <- enrichPathway(gene= purple_genes$ENTREZID, pvalueCutoff = 0.05)
purple_reactome_df<-fortify(purple_reactome, showCategory = 10)
purple_reactome_df$p.adjust<- round(-log10(as.numeric(purple_reactome_df$p.adjust)), digits=1)
purple_reactome_plot_old<-enrichplot::cnetplot(purple_reactome,  color_category = "purple", color_gene = "purple", cex_label_category=1, cex_label_gene=1, showCategory = 5) + theme_void(base_size = 24) +   labs(title = "Reactome pathway enrichment analysis", subtitle ="<span style = 'color: red;'>cf-purple</span>") + theme(text=element_text(family="Arial"), plot.margin = unit(c(0, 0, 0, 0), "cm"), plot.subtitle =  element_markdown(size = 25, face="bold", hjust = 0.5), plot.title = element_text(color="black", size=26, face="bold", hjust = 0.5)) + guides(size = guide_legend(reverse=T))
purple_reactome_plot<-ggplot(purple_reactome_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks()) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
labs(title = "Reactome pathway enrichment analysis", subtitle ="<span style = 'color: red;'>cf-purple</span>") +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle =  element_markdown(size = 27, face="bold", hjust = 0.5))
#generate enrichment plots for module cf-yellow
yellow_genes<-module_genes_entrez %>%
dplyr::filter(module=="cf-yellow") %>%
na.omit() %>%
dplyr::select(ENTREZID) %>%
unique()
yellow_reactome <- enrichPathway(gene= yellow_genes$ENTREZID, pvalueCutoff = 0.05)
yellow_reactome_df<-fortify(yellow_reactome, showCategory = 10)
yellow_reactome_df$p.adjust<- round(-log10(as.numeric(yellow_reactome_df$p.adjust)), digits=1)
yellow_reactome_plot_old<-enrichplot::cnetplot(yellow_reactome,  color_category = "yellow", color_gene = "yellow", cex_label_category=1, cex_label_gene=1, showCategory = 5) + theme_void(base_size = 24) +
labs(title = "Reactome pathway enrichment analysis", subtitle ="<span style = 'color: red;'>cf-yellow</span>") + theme(text=element_text(family="Arial"), plot.margin = unit(c(0, 0, 0, 0), "cm"), plot.subtitle =  element_markdown(size = 25, face="bold", hjust = 0.5), plot.title = element_text(color="black", size=26, face="bold", hjust = 0.5)) + guides(size = guide_legend(reverse=T))
yellow_reactome_plot<-ggplot(yellow_reactome_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks()) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
labs(title = "Reactome pathway enrichment analysis", subtitle ="<span style = 'color: red;'>cf-yellow</span>") +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle =  element_markdown(size = 27, face="bold", hjust = 0.5))
#load cell specific presevration staistics
load("./scrna/results/cf_mp/Portal endothelial cells_statsZ.RData")
port<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Cholangiocytes_statsZ.RData")
chl<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Hepatocytes_statsZ.RData")
hepato<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/LSECs_statsZ.RData")
lsec<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Macrophages_statsZ.RData")
macro<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Mature B cells_statsZ.RData")
b<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/NK-like cells_statsZ.RData")
nk<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/T cells_statsZ.RData")
t<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Plasma cells_statsZ.RData")
pl<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Erythroid cells_statsZ.RData")
er<-statsZ_all$Zsummary.pres
#merge, clean and plot the data
cfmp_df<-data.frame(module=rownames(statsZ_all), Portal=port, Hepatocytes=hepato, LSECs=lsec, Macrophages=macro, b_cells=b, t_cells=t, NK_cells=nk, Erythroid=er, Cholangiocytes=chl, Plasma_cells=pl)
cfmp_df$module<-paste0("cf-", "", cfmp_df$module)
rownames(cfmp_df)<-cfmp_df$module
cfmp_df<-cfmp_df  %>%
filter(!module %in% c("cf-gold", "cf-grey")) %>%
dplyr::select(-module)
cfmp_df$modules<-rownames(cfmp_df)
cfmp_long<-cfmp_df %>%
pivot_longer(!modules, names_to = "cell", values_to = "value")
cfmp_long$cell <-recode(cfmp_long$cell, t_cells = "T cells", 'NK_cells'="NK-like cells", Erythroid="Erythroid cells", b_cells="Mature B cells", Plasma_cells="Plasma cells", Portal="Portal endothelial cells")
cf_heatmap<-ggplot(cfmp_long, aes(x = cell, y = modules)) +
geom_tile(color = "black", aes(fill = value)) + theme_classic(base_size = 25) +
scale_fill_distiller(palette = "YlGnBu", direction=1, limits=c(2,17), na.value="grey95", name="Zsum") +
labs(x = "", y = "", fill="cor") +
scale_x_discrete(expand = c(0,0))+
scale_y_discrete(expand = c(0,0), position = "right") +
ggtitle("cfRNA module preservation", subtitle = "scRNA dataset") +
theme(
text=element_text(family="Arial"),
legend.position="left",
legend.title.align=0.5,
legend.key = element_rect(fill = "lightblue", color = NA),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
plot.title = element_text(color="black", size=26, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=25, face="bold", hjust = 0.5),
axis.text.x = element_text(angle = 30, vjust=1, hjust=1),
axis.text.y = element_text(angle = 0, hjust = 1, colour = c("black", "black", "black", "black", "red", "black", "black", "red")))
cfmp_df
cfmp_heatmap
cf_heatmap
cfmp_df$module
#load cell specific presevration staistics
load("./scrna/results/cf_mp/Portal endothelial cells_statsZ.RData")
port<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Cholangiocytes_statsZ.RData")
chl<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Hepatocytes_statsZ.RData")
hepato<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/LSECs_statsZ.RData")
lsec<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Macrophages_statsZ.RData")
macro<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Mature B cells_statsZ.RData")
b<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/NK-like cells_statsZ.RData")
nk<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/T cells_statsZ.RData")
t<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Plasma cells_statsZ.RData")
pl<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Erythroid cells_statsZ.RData")
er<-statsZ_all$Zsummary.pres
#merge, clean and plot the data
cfmp_df<-data.frame(module=rownames(statsZ_all), Portal=port, Hepatocytes=hepato, LSECs=lsec, Macrophages=macro, b_cells=b, t_cells=t, NK_cells=nk, Erythroid=er, Cholangiocytes=chl, Plasma_cells=pl)
#cfmp_df$module<-paste0("cf-", "", cfmp_df$module)
rownames(cfmp_df)<-cfmp_df$module
cfmp_df<-cfmp_df  %>%
filter(!module %in% c("cf-gold", "cf-grey")) %>%
dplyr::select(-module)
cfmp_df$modules<-rownames(cfmp_df)
cfmp_long<-cfmp_df %>%
pivot_longer(!modules, names_to = "cell", values_to = "value")
cfmp_long$cell <-recode(cfmp_long$cell, t_cells = "T cells", 'NK_cells'="NK-like cells", Erythroid="Erythroid cells", b_cells="Mature B cells", Plasma_cells="Plasma cells", Portal="Portal endothelial cells")
cf_heatmap<-ggplot(cfmp_long, aes(x = cell, y = modules)) +
geom_tile(color = "black", aes(fill = value)) + theme_classic(base_size = 25) +
scale_fill_distiller(palette = "YlGnBu", direction=1, limits=c(2,17), na.value="grey95", name="Zsum") +
labs(x = "", y = "", fill="cor") +
scale_x_discrete(expand = c(0,0))+
scale_y_discrete(expand = c(0,0), position = "right") +
ggtitle("cfRNA module preservation", subtitle = "scRNA dataset") +
theme(
text=element_text(family="Arial"),
legend.position="left",
legend.title.align=0.5,
legend.key = element_rect(fill = "lightblue", color = NA),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
plot.title = element_text(color="black", size=26, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=25, face="bold", hjust = 0.5),
axis.text.x = element_text(angle = 30, vjust=1, hjust=1),
axis.text.y = element_text(angle = 0, hjust = 1, colour = c("black", "black", "black", "black", "red", "black", "black", "red")))
cf_heatmap
#load cell specific presevration staistics
load("./scrna/results/cf_mp/Portal endothelial cells_statsZ.RData")
port<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Cholangiocytes_statsZ.RData")
chl<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Hepatocytes_statsZ.RData")
hepato<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/LSECs_statsZ.RData")
lsec<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Macrophages_statsZ.RData")
macro<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Mature B cells_statsZ.RData")
b<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/NK-like cells_statsZ.RData")
nk<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/T cells_statsZ.RData")
t<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Plasma cells_statsZ.RData")
pl<-statsZ_all$Zsummary.pres
load("./scrna/results/cf_mp/Erythroid cells_statsZ.RData")
er<-statsZ_all$Zsummary.pres
#merge, clean and plot the data
cfmp_df<-data.frame(module=rownames(statsZ_all), Portal=port, Hepatocytes=hepato, LSECs=lsec, Macrophages=macro, b_cells=b, t_cells=t, NK_cells=nk, Erythroid=er, Cholangiocytes=chl, Plasma_cells=pl)
#cfmp_df$module<-paste0("cf-", "", cfmp_df$module)
rownames(cfmp_df)<-cfmp_df$module
cfmp_df<-cfmp_df  %>%
filter(!module %in% c("gold", "grey")) %>%
dplyr::select(-module)
cfmp_df$modules<-rownames(cfmp_df)
cfmp_long<-cfmp_df %>%
pivot_longer(!modules, names_to = "cell", values_to = "value")
cfmp_long$cell <-recode(cfmp_long$cell, t_cells = "T cells", 'NK_cells'="NK-like cells", Erythroid="Erythroid cells", b_cells="Mature B cells", Plasma_cells="Plasma cells", Portal="Portal endothelial cells")
cf_heatmap<-ggplot(cfmp_long, aes(x = cell, y = modules)) +
geom_tile(color = "black", aes(fill = value)) + theme_classic(base_size = 25) +
scale_fill_distiller(palette = "YlGnBu", direction=1, limits=c(2,17), na.value="grey95", name="Zsum") +
labs(x = "", y = "", fill="cor") +
scale_x_discrete(expand = c(0,0))+
scale_y_discrete(expand = c(0,0), position = "right") +
ggtitle("cfRNA module preservation", subtitle = "scRNA dataset") +
theme(
text=element_text(family="Arial"),
legend.position="left",
legend.title.align=0.5,
legend.key = element_rect(fill = "lightblue", color = NA),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
plot.title = element_text(color="black", size=26, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=25, face="bold", hjust = 0.5),
axis.text.x = element_text(angle = 30, vjust=1, hjust=1),
axis.text.y = element_text(angle = 0, hjust = 1, colour = c("black", "black", "black", "black", "red", "black", "black", "red")))
cf_heatmap
library(dplyr)
library(cowplot)
library(ggplot2)
library(forcats)
library(scales)
library(ReactomePA)
library(org.Hs.eg.db)
library(clusterProfiler)
library(ragg)
library(AnnotationDbi)
library(enrichplot)
library(tidyr)
library(Seurat)
library(ggtext)
load("./cfrna/results/wgcna_main/cfwgcna.RData")
#for Linux based systems
options(clusterProfiler.download.method = "wget")
module_genes<-data.frame( module = cfmergedcolors, gene = colnames(cfrna_wgcna_input))
module_genes_entrez<-AnnotationDbi::select(org.Hs.eg.db,
keys = module_genes$gene,
keytype = "SYMBOL",
columns = c("SYMBOL","ENTREZID")) %>% dplyr::left_join(module_genes,by=c("SYMBOL"="gene"))
#KEGG pathway enrichment analysis and visualization for module cf-turquoise
yellow_genes<-module_genes_entrez %>%
dplyr::filter(module=="cf-yellow") %>%
na.omit() %>%
dplyr::select(ENTREZID) %>%
unique()
yellow_kegg <- enrichKEGG(gene= yellow_genes$ENTREZID, pvalueCutoff = 0.05, organism = 'hsa')
yellow_kegg_df<-fortify(yellow_kegg, showCategory = 10)
yellow_kegg_df$p.adjust<- -log10(as.numeric(yellow_kegg_df$p.adjust))
yellow_kegg_plot<-ggplot(yellow_kegg_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks(n = 3)) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
ggtitle("KEGG pathwy enrichment analysis", subtitle = "cfRNA module cf-yellow") +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=27, face="bold", hjust = 0.5))
#WikiPathways pathway enrichment analysis and visualization for module cf-yellow
yellow_wp<-enrichWP(yellow_genes$ENTREZID, organism = "Homo sapiens")
yellow_wp_df<-fortify(yellow_wp, showCategory = 10)
yellow_wp_df$p.adjust<- -log10(as.numeric(yellow_wp_df$p.adjust))
yellow_wp_plot<-ggplot(yellow_wp_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks()) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=27, face="bold", hjust = 0.5)) +
ggtitle("WikiPathways pathwy enrichment analysis", subtitle = "cfRNA module cf-yellow")
View(yellow_wp_df)
View(module_genes)
View(module_genes_entrez)
View(yellow_genes)
View(yellow_genes)
yellow_kegg <- enrichKEGG(gene= yellow_genes$ENTREZID, pvalueCutoff = 0.05, organism = 'hsa')
yellow_kegg_df<-fortify(yellow_kegg, showCategory = 10)
View(yellow_kegg_df)
load("./cfrna/results/wgcna_main/cfwgcna.RData")
#for Linux based systems
options(clusterProfiler.download.method = "wget")
module_genes<-data.frame( module = cfmergedcolors, gene = colnames(cfrna_wgcna_input))
module_genes_entrez<-AnnotationDbi::select(org.Hs.eg.db,
keys = module_genes$gene,
keytype = "SYMBOL",
columns = c("SYMBOL","ENTREZID")) %>% dplyr::left_join(module_genes,by=c("SYMBOL"="gene"))
#KEGG pathway enrichment analysis and visualization for module cf-turquoise
yellow_genes<-module_genes_entrez %>%
dplyr::filter(module=="cf-yellow") %>%
na.omit() %>%
dplyr::select(ENTREZID) %>%
unique()
yellow_kegg <- enrichKEGG(gene= yellow_genes$ENTREZID, pvalueCutoff = 0.05, organism = 'hsa')
yellow_kegg_df<-fortify(yellow_kegg, showCategory = 10)
yellow_kegg_df$p.adjust<- -log10(as.numeric(yellow_kegg_df$p.adjust))
yellow_kegg_plot<-ggplot(yellow_kegg_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks(n = 3)) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
ggtitle("KEGG pathwy enrichment analysis", subtitle = "cfRNA module cf-yellow") +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=27, face="bold", hjust = 0.5))
#WikiPathways pathway enrichment analysis and visualization for module cf-yellow
yellow_wp<-enrichWP(yellow_genes$ENTREZID, organism = "Homo sapiens")
yellow_wp_df<-fortify(yellow_wp, showCategory = 10)
yellow_wp_df$p.adjust<- -log10(as.numeric(yellow_wp_df$p.adjust))
yellow_wp_plot<-ggplot(yellow_wp_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks()) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=27, face="bold", hjust = 0.5)) +
ggtitle("WikiPathways pathwy enrichment analysis", subtitle = "cfRNA module cf-yellow")
load("./cfrna/results/wgcna_main/cfwgcna.RData")
#for Linux based systems
#options(clusterProfiler.download.method = "wget")
module_genes<-data.frame( module = cfmergedcolors, gene = colnames(cfrna_wgcna_input))
module_genes_entrez<-AnnotationDbi::select(org.Hs.eg.db,
keys = module_genes$gene,
keytype = "SYMBOL",
columns = c("SYMBOL","ENTREZID")) %>% dplyr::left_join(module_genes,by=c("SYMBOL"="gene"))
#KEGG pathway enrichment analysis and visualization for module cf-turquoise
yellow_genes<-module_genes_entrez %>%
dplyr::filter(module=="cf-yellow") %>%
na.omit() %>%
dplyr::select(ENTREZID) %>%
unique()
yellow_kegg <- enrichKEGG(gene= yellow_genes$ENTREZID, pvalueCutoff = 0.05, organism = 'hsa')
yellow_kegg_df<-fortify(yellow_kegg, showCategory = 10)
yellow_kegg_df$p.adjust<- -log10(as.numeric(yellow_kegg_df$p.adjust))
yellow_kegg_plot<-ggplot(yellow_kegg_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks(n = 3)) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
ggtitle("KEGG pathwy enrichment analysis", subtitle = "cfRNA module cf-yellow") +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=27, face="bold", hjust = 0.5))
#WikiPathways pathway enrichment analysis and visualization for module cf-yellow
yellow_wp<-enrichWP(yellow_genes$ENTREZID, organism = "Homo sapiens")
yellow_wp_df<-fortify(yellow_wp, showCategory = 10)
yellow_wp_df$p.adjust<- -log10(as.numeric(yellow_wp_df$p.adjust))
yellow_wp_plot<-ggplot(yellow_wp_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) +
geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks()) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=27, face="bold", hjust = 0.5)) +
ggtitle("WikiPathways pathwy enrichment analysis", subtitle = "cfRNA module cf-yellow")
#WikiPathways pathway enrichment analysis and visualization for module cf-yellow
yellow_wp<-enrichWP(yellow_genes$ENTREZID, organism = "Homo sapiens")
View(yellow_genes)
#WikiPathways pathway enrichment analysis and visualization for module cf-yellow
yellow_wp<-enrichWP(yellow_genes$ENTREZID, organism = "Homo sapiens")
yellow_wp_df<-fortify(yellow_wp, showCategory = 10)
#WikiPathways pathway enrichment analysis and visualization for module cf-yellow
yellow_wp<-enrichWP(yellow_genes$ENTREZID, organism = "Homo sapiens")
yellow_wp_df<-fortify(yellow_wp, showCategory = 10)
yellow_wp<-enrichWP(yellow_genes$ENTREZID, organism = "Homo sapiens")
enrichWP
View(yellow_kegg_df)
View(yellow_kegg_df)
yellow_kegg_plot
View(yellow_kegg_df)
#WikiPathways pathway enrichment analysis and visualization for module cf-yellow
yellow_wp<-enrichWP(yellow_genes$ENTREZID, organism = "Homo sapiens")
purple_genes<-module_genes_entrez %>% dplyr::filter(module=="cf-purple") %>% na.omit() %>%
dplyr::select(ENTREZID) %>% unique()
purple_kegg <- enrichKEGG(gene= purple_genes$ENTREZID, pvalueCutoff = 0.05, organism = "hsa")
purple_kegg_df<-fortify(purple_kegg, showCategory = 10)
purple_kegg_df$p.adjust<- -log10(as.numeric(purple_kegg_df$p.adjust))
purple_kegg_plot<-ggplot(purple_kegg_df, aes(x = GeneRatio, y = fct_reorder(Description, GeneRatio))) + geom_point(aes(size = Count, color = p.adjust))  +
scale_size_continuous(range = c(6, 10), breaks = pretty_breaks(n=3)) +
scale_colour_gradient(name = "-log10(p.adjust)", low="grey", high="black",  breaks=scales::extended_breaks(n = 3)) +
guides(size = guide_legend(reverse=T)) +
ylab(NULL) +
scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 30))  +
scale_x_continuous(labels =scales::label_number(accuracy = 0.001), breaks = scales::extended_breaks(n=3)) +
theme_bw(base_size = 26, base_family = "Arial", base_rect_size = 1, base_line_size = 1) +
theme(plot.title = element_text(color="black", size=28, face="bold", hjust = 0.5),
plot.subtitle = element_text(color="black", size=27, face="bold", hjust = 0.5),) +
ggtitle("KEGG pathway enrichment analysis", subtitle = "cfRNA module cf-purple")
#WikiPathways pathway enrichment analysis and visualization for module cf-purple
purple_wp<-enrichWP(purple_genes$ENTREZID, organism = "Homo sapiens")
purple_wp_df<-fortify(purple_wp, showCategory = 10)
purple_wp_df$p.adjust<- -log10(as.numeric(purple_wp_df$p.adjust))
View(purple_wp_df)
View(purple_genes)
View(module_genes_entrez)
purple_wp<-enrichWP(module_genes_entrez$ENTREZID, organism = "Homo sapiens")
View(module_genes_entrez)
View(module_genes)
enrichWP
purple_genes$ENTREZID
purple_wp<-enrichWP(module_genes_entrez$ENTREZID, organism = "Homo sapiens")
enrichWP
purple_wp<-enrichWP(module_genes_entrez$SYMBOL, organism = "Homo sapiens")
